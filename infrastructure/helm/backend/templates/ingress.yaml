{{/*
Human Tasks:
1. Verify AWS Application Load Balancer Controller is installed in the cluster
2. Configure DNS records to point to the ALB endpoint
3. Ensure SSL/TLS certificates are properly provisioned in AWS Certificate Manager
4. Validate that the ingress-nginx controller version 4.7.1 is deployed
5. Review and adjust timeout values based on application requirements
*/}}

{{/* Required Helm Version: v3.0+ */}}
{{/* Required Controller: ingress-nginx v4.7.1 */}}

{{/* 
Addresses requirement: Load Balancing (2.1 High-Level Architecture Overview/API Gateway Layer)
Creates Kubernetes ingress resource for external traffic routing
*/}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: nginx
    
    {{/* Addresses requirement: SSL/TLS Termination (2.4 Security Architecture/Transport Security) */}}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "HIGH:!aNULL:!MD5"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_ssl_server_name on;

    {{/* Addresses requirement: High Availability (2.5.4 Availability Architecture) */}}
    # Request size and timeout configurations
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"

    # CORS configuration for API accessibility
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

spec:
  {{/* Addresses requirement: Load Balancing (2.1 High-Level Architecture Overview/API Gateway Layer) */}}
  ingressClassName: {{ .Values.ingress.className | default "nginx" }}
  
  {{/* Addresses requirement: SSL/TLS Termination (2.4 Security Architecture/Transport Security) */}}
  {{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  
  {{/* Addresses requirement: High Availability (2.5.4 Availability Architecture) */}}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "backend.fullname" . }}
                port:
                  number: 8000