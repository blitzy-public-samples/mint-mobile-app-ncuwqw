// Human Tasks:
// 1. Create a keystore file for signing the release build
// 2. Configure signing keys in local.properties
// 3. Set up Firebase project and add google-services.json
// 4. Configure ProGuard rules in proguard-rules.pro

// Requirement: Android Platform Support (1.1 System Overview/Client Applications)
// Android application build configuration for React Native implementation
apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "kotlin-android"
apply plugin: "com.google.gms.google-services"

import com.android.build.OutputFile

// Requirement: Cross-Platform Development (2.2 Component Architecture/React Native)
// React Native Android build configuration
def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = true
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    namespace "com.mintreplicalite"
    compileSdkVersion 33
    ndkVersion rootProject.ext.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId "com.mintreplicalite"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('RELEASE_STORE_FILE')) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Requirement: Security Implementation (2.4 Security Architecture)
    // Configuration for security features and encryption
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
}

dependencies {
    // React Native core framework - version 0.71.8
    implementation "com.facebook.react:react-native:0.71.8"

    // AndroidX core functionality - version 1.9.0
    implementation "androidx.core:core-ktx:1.9.0"

    // Security and encryption features - version 1.1.0-alpha06
    implementation "androidx.security:security-crypto:1.1.0-alpha06"

    // Firebase Cloud Messaging for push notifications - version 23.1.2
    implementation "com.google.firebase:firebase-messaging:23.1.2"

    // Biometric authentication support - version 1.2.0-alpha05
    implementation "androidx.biometric:biometric:1.2.0-alpha05"

    // Kotlin standard library - version 1.7.20
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.20"

    // Debug dependencies
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.flipper'
        exclude group:'com.squareup.okhttp3'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.flipper'
    }

    // Required for new architecture
    implementation project(':react-native-gradle-plugin')
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)