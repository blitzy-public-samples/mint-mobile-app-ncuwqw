# Human Tasks:
# 1. Ensure all secret values are properly base64 encoded before deployment
# 2. Configure Vault authentication for secret injection
# 3. Set up key rotation policies in Vault
# 4. Verify RBAC policies for service accounts accessing secrets
# 5. Configure encryption-at-rest for etcd
# 6. Set up audit logging for secret access
# 7. Implement automated secret rotation using external-secrets operator

# Kubernetes version: v1.24+

---
# Backend application secrets
# Addresses requirement: Secure Configuration Management (6. Security Considerations/6.2 Data Security)
# Addresses requirement: Database Security (2.1 High-Level Architecture Overview/Data Layer)
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: mint-replica-backend
  labels:
    app: mint-replica-lite
    component: backend
    environment: ${ENV}
    managed-by: terraform
  annotations:
    kubernetes.io/description: "Mint Replica Lite application secrets"
    kubernetes.io/environment: "${ENV}"
    kubernetes.io/managed-by: "terraform"
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "mint-replica-${ENV}"
    vault.hashicorp.com/agent-inject-secret-database: "database/creds/mint-replica-${ENV}"
    vault.hashicorp.com/agent-inject-secret-aws: "aws/creds/mint-replica-${ENV}"
    vault.hashicorp.com/agent-inject-secret-plaid: "plaid/creds/mint-replica-${ENV}"
    vault.hashicorp.com/secret-volume-path: "/vault/secrets"
    vault.hashicorp.com/tls-skip-verify: "false"
    vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
type: Opaque
data:
  # Database credentials
  DATABASE_URL: ${BASE64_DB_URL}
  REDIS_URL: ${BASE64_REDIS_URL}
  
  # Authentication and encryption keys
  # Addresses requirement: Key Management (6.2 Data Security/6.2.1 Encryption Implementation)
  JWT_SECRET: ${BASE64_JWT_SECRET}
  ENCRYPTION_KEY: ${BASE64_ENCRYPTION_KEY}
  
  # Cloud service credentials
  AWS_ACCESS_KEY_ID: ${BASE64_AWS_ACCESS_KEY}
  AWS_SECRET_ACCESS_KEY: ${BASE64_AWS_SECRET_KEY}
  
  # Third-party API credentials
  PLAID_CLIENT_ID: ${BASE64_PLAID_CLIENT_ID}
  PLAID_SECRET: ${BASE64_PLAID_SECRET}

---
# Web application secrets
# Addresses requirement: Secure Configuration Management (6. Security Considerations/6.2 Data Security)
apiVersion: v1
kind: Secret
metadata:
  name: web-secrets
  namespace: mint-replica-web
  labels:
    app: mint-replica-lite
    component: web
    environment: ${ENV}
    managed-by: terraform
  annotations:
    kubernetes.io/description: "Mint Replica Lite web application secrets"
    kubernetes.io/environment: "${ENV}"
    kubernetes.io/managed-by: "terraform"
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "mint-replica-${ENV}"
    vault.hashicorp.com/agent-inject-secret-web: "web/creds/mint-replica-${ENV}"
    vault.hashicorp.com/secret-volume-path: "/vault/secrets"
    vault.hashicorp.com/tls-skip-verify: "false"
    vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
type: Opaque
data:
  # API and analytics keys
  REACT_APP_API_KEY: ${BASE64_API_KEY}
  REACT_APP_ANALYTICS_KEY: ${BASE64_ANALYTICS_KEY}
  
  # Client-side encryption key
  # Addresses requirement: Key Management (6.2 Data Security/6.2.1 Encryption Implementation)
  REACT_APP_ENCRYPTION_KEY: ${BASE64_WEB_ENCRYPTION_KEY}

---
# Network Policy to restrict secret access
# Addresses requirement: Secure Configuration Management (6. Security Considerations/6.2 Data Security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-secrets-access
  namespace: mint-replica-backend
spec:
  podSelector:
    matchLabels:
      app: mint-replica-lite
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: mint-replica-lite
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: mint-replica-backend

---
# Network Policy for web secrets
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-web-secrets-access
  namespace: mint-replica-web
spec:
  podSelector:
    matchLabels:
      app: mint-replica-lite
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: mint-replica-lite
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: mint-replica-web